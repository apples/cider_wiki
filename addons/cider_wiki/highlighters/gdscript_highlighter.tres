[gd_resource type="CodeHighlighter" format=3 uid="uid://bkjyu7fbqudbx"]

[resource]
number_color = Color(0.63, 1, 0.88, 1)
symbol_color = Color(0.67, 0.79, 1, 1)
function_color = Color(0.34, 0.7, 1, 1)
member_variable_color = Color(0.736, 0.88, 1, 1)
keyword_colors = {
"AABB": Color(0.26, 1, 0.76, 1),
"Array": Color(0.26, 1, 0.76, 1),
"Basis": Color(0.26, 1, 0.76, 1),
"Callable": Color(0.26, 1, 0.76, 1),
"Color": Color(0.26, 1, 0.76, 1),
"Dictionary": Color(0.26, 1, 0.76, 1),
"INF": Color(1, 0.44, 0.52, 1),
"NAN": Color(1, 0.44, 0.52, 1),
"NodePath": Color(0.26, 1, 0.76, 1),
"PI": Color(1, 0.44, 0.52, 1),
"PackedByteArray": Color(0.26, 1, 0.76, 1),
"PackedColorArray": Color(0.26, 1, 0.76, 1),
"PackedFloat32Array": Color(0.26, 1, 0.76, 1),
"PackedFloat64Array": Color(0.26, 1, 0.76, 1),
"PackedInt32Array": Color(0.26, 1, 0.76, 1),
"PackedInt64Array": Color(0.26, 1, 0.76, 1),
"PackedStringArray": Color(0.26, 1, 0.76, 1),
"PackedVector2Array": Color(0.26, 1, 0.76, 1),
"PackedVector3Array": Color(0.26, 1, 0.76, 1),
"Plane": Color(0.26, 1, 0.76, 1),
"Projection": Color(0.26, 1, 0.76, 1),
"Quaternion": Color(0.26, 1, 0.76, 1),
"RID": Color(0.26, 1, 0.76, 1),
"Rect2": Color(0.26, 1, 0.76, 1),
"Rect2i": Color(0.26, 1, 0.76, 1),
"Signal": Color(0.26, 1, 0.76, 1),
"String": Color(0.26, 1, 0.76, 1),
"StringName": Color(0.26, 1, 0.76, 1),
"TAU": Color(1, 0.44, 0.52, 1),
"Transform2D": Color(0.26, 1, 0.76, 1),
"Transform3D": Color(0.26, 1, 0.76, 1),
"Vector2": Color(0.26, 1, 0.76, 1),
"Vector2i": Color(0.26, 1, 0.76, 1),
"Vector3": Color(0.26, 1, 0.76, 1),
"Vector3i": Color(0.26, 1, 0.76, 1),
"Vector4": Color(0.26, 1, 0.76, 1),
"Vector4i": Color(0.26, 1, 0.76, 1),
"and": Color(1, 0.44, 0.52, 1),
"as": Color(1, 0.44, 0.52, 1),
"assert": Color(1, 0.44, 0.52, 1),
"await": Color(1, 0.44, 0.52, 1),
"break": Color(1, 0.55, 0.8, 1),
"breakpoint": Color(1, 0.44, 0.52, 1),
"class": Color(1, 0.44, 0.52, 1),
"class_name": Color(1, 0.44, 0.52, 1),
"const": Color(1, 0.44, 0.52, 1),
"continue": Color(1, 0.55, 0.8, 1),
"elif": Color(1, 0.55, 0.8, 1),
"else": Color(1, 0.55, 0.8, 1),
"enum": Color(1, 0.44, 0.52, 1),
"extends": Color(1, 0.44, 0.52, 1),
"false": Color(1, 0.44, 0.52, 1),
"for": Color(1, 0.55, 0.8, 1),
"func": Color(1, 0.44, 0.52, 1),
"if": Color(1, 0.55, 0.8, 1),
"in": Color(1, 0.44, 0.52, 1),
"is": Color(1, 0.44, 0.52, 1),
"match": Color(1, 0.55, 0.8, 1),
"namespace": Color(1, 0.44, 0.52, 1),
"not": Color(1, 0.44, 0.52, 1),
"null": Color(1, 0.44, 0.52, 1),
"or": Color(1, 0.44, 0.52, 1),
"pass": Color(1, 0.55, 0.8, 1),
"preload": Color(1, 0.44, 0.52, 1),
"return": Color(1, 0.55, 0.8, 1),
"self": Color(1, 0.44, 0.52, 1),
"signal": Color(1, 0.44, 0.52, 1),
"static": Color(1, 0.44, 0.52, 1),
"super": Color(1, 0.44, 0.52, 1),
"trait": Color(1, 0.44, 0.52, 1),
"true": Color(1, 0.44, 0.52, 1),
"var": Color(1, 0.44, 0.52, 1),
"void": Color(1, 0.44, 0.52, 1),
"when": Color(1, 0.55, 0.8, 1),
"while": Color(1, 0.55, 0.8, 1),
"yield": Color(1, 0.44, 0.52, 1)
}
color_regions = {
"\" \"": Color(1, 0.93, 0.63, 1),
"#": Color(0.8025, 0.81, 0.8225, 0.5),
"##": Color(0.6, 0.7, 0.8, 0.8),
"' '": Color(1, 0.93, 0.63, 1)
}
